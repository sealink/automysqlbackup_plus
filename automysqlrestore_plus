#!/bin/bash

# Verify required variables are set

if [ -r "${CONFIGFILE}" ]; then
  . ${CONFIGFILE}
else
  echo "Unreadable config file ${CONFIGFILE}"
  exit 1
fi

if [ -d "${BACKUPDIR}" ]; then
  echo "Looking for backup in ${BACKUPDIR}"
else
  echo "Unusable backup directory."
  exit 1
fi

GZIPFILE=$( find "${BACKUPDIR}" -maxdepth 1 -type f -name "*.gz" -printf "%T@ %p\n" |
           sort -n |
           cut -d' ' -f 2 |
           tail -n 1)

if [ -r "${GZIPFILE}" ]; then
  echo "Found backup file ${GZIPFILE}"
else
  "No backup file found."
  exit 1
fi

DATADIR=""
if [ -n "$SANDBOX_BASE" ]; then
  echo "Sandbox set: ${SANDBOX_BASE}"
  DATADIR="${SANDBOX_BASE}"
else
  echo "Sandbox not set."
  echo "This script is only designed to restore to sandboxes."
  exit 1
fi

if "${DATADIR}"/my sql -e 'SELECT @@version;' ; then
  echo "Successfully connected to MySQL sandbox in ${DATADIR}".
else
  echo "Unable to connect to MySQL sandbox in ${DATADIR}".
  exit 1
fi

restore_from_hot_backup () {
  mkdir "${DATADIR}/data.new" && \
  cd "${DATADIR}/data.new" && \
  echo "Extracting latest hot backup ${GZIPFILE}" && \
  tar xzf "${GZIPFILE}" && \
  cd "${DATADIR}" && \
  "${DATADIR}/stop" && \
  mv "${DATADIR}/data" "${DATADIR}/data.old" && \
  mv "${DATADIR}/data.new" "${DATADIR}/data" && \
  "${DATADIR}/start" && \
  rm -rf "${DATADIR}/data.old" && \

  return $?
}

# Restore the database backup from the given location to the given target
restore_from_hot_backup
status=$?
if [ $status -eq 0 ]; then
  echo "Restore successful."
else
  echo "Restore failed."
fi
exit $status
